import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";
import Fetcher from './Fetcher';
import axios from 'axios'; // import getPerf from '@schibstedspain/sui-perf'
// import measureAxios from '@schibstedspain/sui-perf/src/measure-axios'

/**
 * @implements Fetcher
 */

var AxiosFetcher =
/*#__PURE__*/
function (_Fetcher) {
  _inheritsLoose(AxiosFetcher, _Fetcher);

  /**
   * @param {Object} deps
   * @param {Config} deps.config
   */
  function AxiosFetcher(_ref) {
    var _this;

    var config = _ref.config;
    _this = _Fetcher.call(this, {
      config: config
    }) || this;
    _this._axios = axios.create(config); // const perf = getPerf(config.get('serverRequestId') || 'default')
    // measureAxios(perf)(this._axios)

    return _this;
  }
  /**
   * Get method
   * @param {String} url
   * @param {Object} options
   * @return {Object}
   */


  var _proto = AxiosFetcher.prototype;

  _proto.get = function get(url, options) {
    return this._axios.get(url, options);
  }
  /**
   * Post method
   * @method post
   * @param {String} url
   * @param {String} body
   * @param {Object} options
   * @return {Object}
   */
  ;

  _proto.post = function post(url, body, options) {
    return this._axios.post(url, body, options);
  }
  /**
   * Put method
   * @method put
   * @param {String} url
   * @param {String} body
   * @param {Object} options
   * @return {Object}
   */
  ;

  _proto.put = function put(url, body, options) {
    return this._axios.put(url, body, options);
  }
  /**
   * Delete method
   * @method delete
   * @param {String} url
   * @param {Object} options
   * @return {Object}
   */
  ;

  _proto.delete = function _delete(url, options) {
    return this._axios.delete(url, options);
  };

  return AxiosFetcher;
}(Fetcher);

export { AxiosFetcher as default };