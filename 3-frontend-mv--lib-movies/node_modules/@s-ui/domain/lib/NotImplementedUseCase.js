import _inheritsLoose from "@babel/runtime/helpers/inheritsLoose";

/* eslint no-console:0 */
import UseCase from './UseCase';
/**
 * This is the default use case returned
 * by the domain when asking for a not implemented
 * use case. It allows to work on the client with
 * a work in progress feature. The execute() method
 * returns a promise which warns in console that
 * the requested method is not implemented yet.
 *
 * */

var NotImplementedUseCase =
/*#__PURE__*/
function (_UseCase) {
  _inheritsLoose(NotImplementedUseCase, _UseCase);

  /**
   * @param {string} key The requested use case not being implemented
   */
  function NotImplementedUseCase(key) {
    var _this;

    _this = _UseCase.call(this) || this;
    _this._key = key;
    return _this;
  }
  /**
   * @override
   */


  var _proto = NotImplementedUseCase.prototype;

  _proto.execute = function execute() {
    return Promise.resolve(console.warn("Service " + this._key + " is not implemented in the current version of the domain"));
  };

  return NotImplementedUseCase;
}(UseCase);

export { NotImplementedUseCase as default };