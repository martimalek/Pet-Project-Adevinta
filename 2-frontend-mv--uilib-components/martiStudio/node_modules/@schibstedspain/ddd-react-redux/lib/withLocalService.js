'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clean = function clean(str) {
  return str.replace('_use_case', '');
};
var snakeToCamel = function snakeToCamel(str) {
  return str.replace(/(_\w)/g, function (match) {
    return match[1].toUpperCase();
  });
};

var withLocalService = function withLocalService() {
  for (var _len = arguments.length, services = Array(_len), _key = 0; _key < _len; _key++) {
    services[_key] = arguments[_key];
  }

  return function (Target) {
    var _class, _temp;

    var DDDLocalServicesInjector = (_temp = _class = function (_Component) {
      (0, _inherits3.default)(DDDLocalServicesInjector, _Component);

      function DDDLocalServicesInjector(props, context) {
        (0, _classCallCheck3.default)(this, DDDLocalServicesInjector);

        var _this = (0, _possibleConstructorReturn3.default)(this, (DDDLocalServicesInjector.__proto__ || (0, _getPrototypeOf2.default)(DDDLocalServicesInjector)).call(this, props, context));

        _this.state = services.reduce(function (acc, service) {
          var response = snakeToCamel(clean(service));
          var params = response + 'Params';
          var error = response + 'Error';
          var loading = response + 'Loading';
          var useCase = snakeToCamel(service);

          acc[useCase] = function (p) {
            var _this$setState;

            _this.setState((_this$setState = {}, (0, _defineProperty3.default)(_this$setState, response, undefined), (0, _defineProperty3.default)(_this$setState, params, p), (0, _defineProperty3.default)(_this$setState, error, undefined), (0, _defineProperty3.default)(_this$setState, loading, true), _this$setState));
            context.domain.get(service).execute(p).then(function (result) {
              var _this$setState2;

              _this.setState((_this$setState2 = {}, (0, _defineProperty3.default)(_this$setState2, response, result), (0, _defineProperty3.default)(_this$setState2, params, p), (0, _defineProperty3.default)(_this$setState2, error, undefined), (0, _defineProperty3.default)(_this$setState2, loading, false), _this$setState2));
            }).catch(function (err) {
              var _this$setState3;

              _this.setState((_this$setState3 = {}, (0, _defineProperty3.default)(_this$setState3, response, undefined), (0, _defineProperty3.default)(_this$setState3, params, p), (0, _defineProperty3.default)(_this$setState3, error, err), (0, _defineProperty3.default)(_this$setState3, loading, false), _this$setState3));
            });
          };
          return acc;
        }, {});
        return _this;
      }

      (0, _createClass3.default)(DDDLocalServicesInjector, [{
        key: 'render',
        value: function render() {
          return _react2.default.createElement(Target, (0, _extends3.default)({}, this.props, this.state));
        }
      }]);
      return DDDLocalServicesInjector;
    }(_react.Component), _class.displayName = 'withLocalService(' + Target.displayName + ')', _class.originalContextTypes = Target.originalContextTypes || Target.contextTypes, _class.contextTypes = {
      domain: _propTypes2.default.object.isRequired
    }, _temp);


    return DDDLocalServicesInjector;
  };
};

exports.default = withLocalService;