'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clean = function clean(str) {
  return str.replace('_use_case', '');
};
var snakeToCamel = function snakeToCamel(str) {
  return str.replace(/(_\w)/g, function (match) {
    return match[1].toUpperCase();
  });
};

var withStreamService = function withStreamService() {
  for (var _len = arguments.length, services = Array(_len), _key = 0; _key < _len; _key++) {
    services[_key] = arguments[_key];
  }

  return function (Target) {
    var _class, _temp;

    return _temp = _class = function (_Component) {
      (0, _inherits3.default)(DDDStreamServicesInjector, _Component);

      function DDDStreamServicesInjector() {
        (0, _classCallCheck3.default)(this, DDDStreamServicesInjector);
        return (0, _possibleConstructorReturn3.default)(this, (DDDStreamServicesInjector.__proto__ || (0, _getPrototypeOf2.default)(DDDStreamServicesInjector)).apply(this, arguments));
      }

      (0, _createClass3.default)(DDDStreamServicesInjector, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
          var _this2 = this;

          var domain = this.context.domain;


          this._disposes = services.map(function (service) {
            var responseKey = snakeToCamel(clean(service)) + '$';
            var paramsKey = responseKey + 'Params';
            var errorKey = responseKey + 'Error';

            return domain.get(service).$.execute.subscribe(function (_ref) {
              var _this2$setState;

              var params = _ref.params,
                  result = _ref.result;

              _this2.setState((_this2$setState = {}, (0, _defineProperty3.default)(_this2$setState, responseKey, result), (0, _defineProperty3.default)(_this2$setState, paramsKey, params), (0, _defineProperty3.default)(_this2$setState, errorKey, undefined), _this2$setState));
            }, function (_ref2) {
              var _this2$setState2;

              var params = _ref2.params,
                  error = _ref2.error;

              _this2.setState((_this2$setState2 = {}, (0, _defineProperty3.default)(_this2$setState2, responseKey, undefined), (0, _defineProperty3.default)(_this2$setState2, paramsKey, params), (0, _defineProperty3.default)(_this2$setState2, errorKey, error), _this2$setState2));
            }).dispose;
          }).reduce(function (acc, dispose, index) {
            var disposeKey = snakeToCamel(clean(services[index])) + '$Dispose';
            acc[disposeKey] = dispose;
            return acc;
          }, {});
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          var _this3 = this;

          (0, _keys2.default)(this._disposes).filter(function (key) {
            return !!key.match(/Dispose/);
          }).forEach(function (key) {
            _this3._disposes[key]();
          });
        }
      }, {
        key: 'render',
        value: function render() {
          return _react2.default.createElement(Target, (0, _extends3.default)({}, this.props, this._disposes, this.state));
        }
      }]);
      return DDDStreamServicesInjector;
    }(_react.Component), _class.displayName = 'withStreamService(' + Target.displayName + ')', _class.originalContextTypes = Target.originalContextTypes || Target.contextTypes, _class.contextTypes = {
      domain: _propTypes2.default.object.isRequired
    }, _temp;
  };
};

exports.default = withStreamService;